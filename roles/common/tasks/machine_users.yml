
- name: Create dev group and machines users in group
  become: true
  become_user: root
  block:

  - name: Ensure group "devs" exists
    group:
      name: devs
      state: present

  - name: Add machine users
    user:
      name: "{{ item.name }}"
      uid: "{{ item.uid }}"
      shell: /bin/bash
      groups: devs
      append: true
    with_items: "{{ machine_users }}"

  # NOTE: this is required in case a user's UID changes - ansible may not update the GID
  - name: Ensure user's group exists with correct gid
    group:
      name: "{{ item.name }}"
      gid: "{{ item.uid }}"
      state: present
    with_items: "{{ machine_users }}"

  # note: this assumes all VMs run Ubuntu - if not, then need to define a var containing OS-specific group
  - name: Allow members of sudo group to sudo without a password
    lineinfile:
      dest: "/etc/sudoers"
      regexp: "^%sudo"
      line: "%sudo ALL=(ALL) NOPASSWD: ALL"
      state: "present"
      validate: /usr/sbin/visudo -cf %s

  # note: this assumes all VMs run Ubuntu - if not, then need to define a var containing OS-specific group
  - name: Add machine users with 'sudo' role to Ubuntu sudo group
    user:
      name: "{{ item.name }}"
      groups:
      - sudo
      append: yes
    with_items: "{{ machine_users | selectattr('roles', 'contains', 'sudo') | list }}"

  - name: Disable login for machine_users with 'nologin' role (leaves account otherwise intact)
    user: 
      name: "{{ item.name }}"
      shell: /sbin/nologin
    with_items: "{{ machine_users | selectattr('roles', 'contains', 'nologin') | list }}"

  - name: Remove old machine user accounts
    user:
      name: "{{ item.name }}"
      state: "absent"
      remove: yes 
      force: yes 
    with_items: "{{ remove_machine_users }}"

  - name: Add SSH keys for users
    authorized_key:
      user: "{{ item.name }}"
      key: "{{ lookup('file', item.key) }}"
      state: present
    with_items: "{{ machine_users }}"

  # former pg-post-tasks tasks
  - name: Pgpass creation and gxadmin user tasks
    when: is_galaxy_head_node|d(False)
    block:
    - name: Create .pgpass files for users
      copy:
        dest: "/home/{{ item.name }}/.pgpass"
        content: "{{ db_address }}:5432:*:{{ db_role }}:{{ db_password }}"
        mode: "600"
        group: "{{ item.name }}"
        owner: "{{ item.name }}"
      vars:
        db_role: "{{ 'galaxy' if item.name == 'ubuntu' else ('reader' if not 'tiaas_admin' in item.roles|d([]) else 'tiaasadmin') }}"
        db_password: "{{ pg_db_password[db_role] }}"
      with_items: "{{ machine_users + [{'name': 'ubuntu'}] }}"
    - name: Ensure gxadmin config directory exists for all users including ubuntu
      file:
        path: "/home/{{ item }}/.config"
        state: directory
        group: "{{ item }}"
        owner: "{{ item }}"
      with_items: "{{ (machine_users | map(attribute='name') | list) + ['ubuntu'] }}"
    - name: Ensure that all users + ubuntu have a copy of gxadmin-local.sh
      copy: 
        src: files/galaxy/gxadmin/gxadmin-local.sh
        dest: "/home/{{ item }}/.config/gxadmin-local.sh"
        mode: "755"
        group: "{{ item }}"
        owner: "{{ item }}"
        force: yes
      with_items: "{{ (machine_users | map(attribute='name') | list) + ['ubuntu'] }}"
