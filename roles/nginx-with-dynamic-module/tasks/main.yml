---
- name: get lsb release  # ubuntu release name i.e. bionic, focal, xenial
  shell: echo `lsb_release -cs`
  register: lsb_release

- name: Install the prerequisites
  apt:
      name: ['curl', 'gnupg2', 'ca-certificates', 'lsb-release']
      state: present

- name: Set up the apt repository for stable nginx packages
  lineinfile:
    path: /etc/apt/sources.list.d/nginx.list
    line: deb [trusted=yes] http://nginx.org/packages/ubuntu {{ lsb_release.stdout }} nginx nginx
    create: true

# - name: Set up repository pinning to prefer official nginx packages over distribution-provided ones  # this does not work
#   lineinfile:
#     path: /etc/apt/preferences.d/99nginx
#     line: "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority"
#     create: true

- name: Import an official nginx signing key so apt can verify the package authenticity
  get_url:
    url: https://nginx.org/keys/nginx_signing.key
    dest: /tmp/nginx_signing.key

- name: Make sure the gpg home directory exists
  file:
    path: /root/.gnupg
    state: directory

- name: Move the key to apt trusted key storage
  shell: mv /tmp/nginx_signing.key /etc/apt/trusted.gpg.d/nginx_signing.asc

- name: Register current nginx version
  shell: echo "$(nginx -v 2>&1 | cut -d '/' -f 2)"  # note this must use shell rather than command
  register: installed_nginx_version

- name: Install nginx
  apt:
      name: nginx
      update_cache: true
  when: installed_nginx_version.stdout != nginx_version  # we need to prevent any surprise updates

- name: Add the nginx user to galaxy's group  # assuming this user already exists
  user:
    name: www-data
    groups:
     - galaxy

- name: Install dynamic module
  import_tasks: install_module.yml
