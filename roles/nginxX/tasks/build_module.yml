---
# Use script cited in https://www.nginx.com/blog/creating-installable-packages-dynamic-modules/
# Because this script might download packages and make changes on the system it should not
# be run in a production environment.  The built module can be imported to a production
# environment.

# - name: Establish nginx version
#   shell: echo "$(nginx -v 2>&1 | cut -d '/' -f 2)"  # note this must use shell rather than command
#   register: nginx_version

# - name: debug
#   debug:
#     msg: "{{ nginx_version.stdout }}"

- name: Make a directory for build operations
  file:
    path: "{{ nginx_build_module_dir }}"
    state: directory

- name: Download build_module.sh script
  get_url:
    url: https://hg.nginx.org/pkg-oss/raw-file/default/build_module.sh
    dest: "{{ nginx_build_module_dir }}"
    mode: 744

# - name: Download the upload module
#   get_url:
#     url: "{{ nginx_module_source_url }}"
#     dest: "{{ nginx_build_module_dir }}/"
#     mode: 400

# - name: unzip the module  # TODO: use unarchive ansible module
#   command:
#     cmd: "tar -xvf nginx-upload-module-2.3.0.tar.gz"
#     chdir: "{{ nginx_build_module_dir }}"

- name: Download and unzip module source code
  ansible.builtin.unarchive:
    src: "{{ nginx_module_source_url }}"
    dest: "{{ nginx_build_module_dir }}/"
    list_files: true
    remote_src: true
  register: module_download

# - name: what does this look like?
#   debug:
#     msg: "{{ module_download.files | first | replace('/', '') }}"

# - name: check command is sound
#   debug:
#     msg: "./build_module.sh -n uploadmodule -y -v {{ nginx_version.stdout }} {{ module_down"

- name: build the module  # note that this script installs modules and overwrites files, hence is innappropriate for use in a production environment
  command: # -n uploadmodule, -n must be lowercase alphanumeric, could make this a parameter
    cmd: "./build_module.sh -n {{ nginx_module_nickname }} -y -v {{ nginx_version }} {{ module_download.files | first | replace('/', '') }}"
    # cmd: "./build_module.sh -n {{ nginx_module_nickname }} -y -v {{ nginx_version }} nginx-upload-module-2.3.0"
    chdir: "{{ nginx_build_module_dir }}"
