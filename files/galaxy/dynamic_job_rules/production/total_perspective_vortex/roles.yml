roles:
  training.*:
    params:
      tiaas_training_role: '{sorted([role for role in user.all_roles() if not role.deleted], key=lambda x: x.created, reverse=True)[0]}'
    rules:
    - id: slurm_training_rule
      if: |
        include_tags = []
        exclude_tags = ['pulsar', 'training-exempt']
        helpers.tag_values_match(entity, include_tags, exclude_tags)
      max_cores: 2
      max_mem: max_cores * 3.8  # TODO check multiplier
      context:
        partition: training
      scheduling:
        require:
          - slurm
          - training
    - id: pulsar_training_rule
      if: |
        include_tags = ['pulsar']
        exclude_tags = ['pulsar-training-large', 'training-exempt']
        helpers.tag_values_match(entity, include_tags, exclude_tags)
      max_cores: 4
      max_mem: max_cores * 2.9  # ratio for pulsar-nci-training
      scheduling:
        require:
          - pulsar  # require pulsar and training: only one place to go
          - training
    - id: pulsar_training_large_rule
      if: |
        include_tags = ['pulsar-training-large']
        exclude_tags = ['training-exempt']
        helpers.tag_values_match(entity, include_tags, exclude_tags)
      max_cores: 16
      max_mem: max_cores * 2.9  # ratio for pulsar-nci-training
      scheduling:
        require:
          - pulsar  # require pulsar and training: only one place to go
          - training
