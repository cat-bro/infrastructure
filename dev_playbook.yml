- hosts: cat_server
  become: true
  vars_files:
      - group_vars/all.yml
      # - group_vars/VAULT
      - group_vars/galaxyservers.yml
      # - group_vars/dev_slurm.yml
      - host_vars/dev.usegalaxy.org.au.yml
  pre_tasks:
    # - name: Attach volume to instance
    #   # If this script is being run for the first time, review the value of galaxyserver_attached_volume_device in group_vars
    #   block: # TODO: This is pretty generic code for attaching a volume to a device and should probably live in another file to be reused
    #     - name: Detect attached volume
    #       parted:
    #         device: "{{ galaxyserver_attached_volume_device }}"
    #         unit: GiB
    #       register: volume_info
    #     - name: Create a filesystem on volume
    #       filesystem:
    #         fstype: "{{ galaxyserver_attached_volume_fstype }}"
    #         dev: "{{ galaxyserver_attached_volume_device }}"
    #       when: volume_info.disk is defined and volume_info.disk.dev is defined and volume_info.disk.dev == galaxyserver_attached_volume_device
    #     - name: Mount volume
    #       mount:
    #         path: "{{ galaxyserver_attached_volume_path }}"
    #         src: "{{ galaxyserver_attached_volume_device }}"
    #         fstype: "{{ galaxyserver_attached_volume_fstype }}"
    #         state: mounted
    #   when: galaxyserver_attached_volume_device is defined
  handlers:
    - name: Restart Galaxy
      systemd:
        name: galaxy
        state: restarted
  roles:
    - galaxyproject.repos
    - common
    - galaxyproject.postgresql
    - role: natefoo.postgresql_objects
      become: true
      become_user: postgres
    - geerlingguy.pip
    - galaxyproject.galaxy
    - usegalaxy_eu.galaxy_systemd
    - galaxyproject.nginx
    - geerlingguy.nfs
    - usegalaxy_eu.gxadmin
    - role: pgpost
      vars:
        galaxy_password: "{{ galaxy_dev_db_user_password }}"
        reader_password: "{{ reader_dev_db_user_password }}"
        db_address: localhost
        # db_address: "{{ hostvars['dev-db']['ansible_hostname'] }}"
    # - galaxyproject.slurm

  post_tasks:
    - name: Let anybody make changes to the server directory
      file:
        path: "{{ galaxy_server_dir }}"
        mode: 0777
        recurse: yes
    # - name: Install slurm-drmaa
    #   package:
    #     name: slurm-drmaa1
    # - name: Reload exportfs
    #   command: exportfs -ra
    #   become: yes
    #   become_user: root
    # - name: Creae .pgpass files for reader role for all users except ubuntu
    #   copy:
    #     dest: "/home/{{ item.name }}/.pgpass"
    #     content: |
    #       "localhost:5432:*:reader:{{ reader_dev_db_user_password }}"
    #     loop: "{{ machine_users }}"
    # - name: Create .pgpass files for ubuntu
    #   copy:
    #     dest: "/home/ubuntu/.pgpass"
    #     content: |
    #       "localhost:5432:*:galaxy:{{ galaxy_dev_db_user_password }}"
    # - name: Ensure variables for gxadmin are set in .bashrc for all users
    #   block:
    #     - name: Add env vars for gxadmin to machine_users .bashrc files
    #       lineinfile:
    #         path: "/home/cat/.bashrc"  #######################
    #         # regexp: "^export {{ item.var }}"
    #         line: "export {{ line.var }}='{{ line.val }}'"
    #       loop:
    #         - var: GALAXY_CONFIG_DIR
    #           val: "{{ galaxy_config_dir }}"
    #         - var: GALAXY_MUTABLE_CONFIG_DIR
    #           val: "{{ galaxy_mutable_config_dir }}"
    #         - var: GALAXY_ROOT
    #           val: "{{ galaxy_server_dir }}"
    #         - var: GALAXY_CONFIG_FILE
    #           val: "{{ galaxy_config_dir }}/galaxy.yml"
    #       loop_control:
    #         index_var: line
    #   loop: "{{ ( machine_users | map(attribute='name') | list ) + ['ubuntu'] }}"
    #   loop_control:
    #     index_var: name
