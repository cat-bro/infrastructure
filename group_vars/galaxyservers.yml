group_packages:
  - make
  - python3-psycopg2
  - libbz2-dev
  - liblzma-dev  # 'libbz2-dev', 'liblzma-dev' have not been necessary for galaxy setup prior to ubuntu 20.04

# In ansible-galaxy-test-server postgresql_objects_users and postgresql_objects_databases are defined here, but these should probably be in group_vars/db-servers.yml

# cat-dev branch include postgresql variables here
# PostgreSQL
postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy
# end cat-dev branch insertion

# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python3-virtualenv    # usegalaxy_eu.certbot

# systemd
galaxy_systemd_mode: mule
galaxy_zergpool_listen_addr: 127.0.0.1:8080
galaxy_restart_handler_name: "Restart Galaxy"

# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
- "{{ hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
nginx_conf_http:
  client_max_body_size: 1g
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /mnt/galaxy
#galaxy_user: ## shifted to all.yml
#  name: galaxy
#  shell: /bin/bash
galaxy_commit_id: release_20.05
galaxy_config_style: yaml
galaxy_force_checkout: true
galaxy_handler_count: 2

galaxy_tmp_path: "{{ galaxy_root }}/tmp"
galaxy_australia_website: "https://usegalaxy-au.github.io"

galaxy_server_dir: "{{ galaxy_root }}/galaxy-app"
galaxy_mutable_config_dir: "{{ galaxy_root }}/var"
galaxy_mutable_data_dir: "{{ galaxy_root }}"
galaxy_config_dir: "{{ galaxy_root }}/config"

galaxy_config:
  uwsgi:  # todo: check desired dev settings for processes, threads, logging, mule, farm, look at how this is defined in prod galaxy.yml
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
      - /favicon.ico={{ galaxy_server_dir }}/static/favicon.ico
    static-safe: client/galaxy/images
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2
  galaxy:
    admin_users: cathjb@gmail.com
    file_path: "{{ galaxy_root }}/data"
    check_migrate_tools: false
    tool_data_path: "{{ galaxy_server_dir }}/tool-data"
    log_level: TRACE
    new_file_path: "{{ galaxy_tmp_path }}"
    job_working_directory: "{{ galaxy_tmp_path }}/job_working_directory"

    # host specific settings
    brand: "{{ __galaxy_config['galaxy']['brand']}}"
    database_connection: "{{ __galaxy_config['galaxy']['database_connection']}}"

    allow_user_impersonation: true
    allow_user_deletion: true
    allow_path_paste: true
    use_interactive: false
    expose_dataset_path: true
    enable_unique_workflow_defaults: true
    database_engine_option_server_side_cursors: true
    track_jobs_in_database: true
    use_heartbeat: true
    allow_user_dataset_purge: true
    enable_quotas: true
    enable_job_recovery: true
    outputs_to_working_directory: false

    static_enabled: true
    show_welcome_with_login: true
    error_email_to: <help@genome.edu.au>  # error reports are disabled if no email is set
    email_from: <galaxy-no-reply@usegalaxy.org.au>
    support_url: "{{ galaxy_australia_website }}/help"

    conda_auto_init: true  # is default
    conda_debug: true
    conda_ensure_channels: 'iuc,conda-forge,bioconda,defaults'  # this is the default setting
    conda_prefix: "{{ galaxy_root }}/tool_dependencies/_conda"

    database_engine_option_strategy: threadlocal
    cleanup_job: onsuccess
    retry_job_output_collection: 10  # look this up
    ucsc_display_sites: 'main,test,archaea,ucla' # review
    # ucsc_build_sites: /cvmfs/data.galaxyproject.org/managed/location/ucsc_build_sites.txt # review

    heartbeat_log: "{{ galaxy_tmp_path }}/heartbeat_{server_name}.log"
    heartbeat_interval: -1 # this disables automatic heartbeat logging (manual logging is still an option)

    database_engine_option_max_overflow: 50 # default is 10
    database_engine_option_pool_size: 20 # default is 5

    install_database_connection: "sqlite:///{{ galaxy_mutable_config_dir }}/galaxy_install_db.sqlite?isolation_level=IMMEDIATE"

    tool_dependency_dir: "{{ galaxy_root }}/tools"

    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"

    # amqp_internal_connection: 'pyamqp://galaxy_internal:more_queues@localhost:5672/galaxy_internal' # this needs configuration

    # data_manager_config_file: /mnt/galaxy-app/config/data_manager_conf.xml.sample  # should we be templating these?
    # shed_data_manager_config_file: /mnt/galaxy/var/shed_data_manager_conf.xml
    # integrated_tool_panel_config: /mnt/galaxy/var/integrated_tool_panel.xml
    # tool_config_file: '/mnt/galaxy-app/config/tool_conf.xml,/mnt/galaxy-app/config/shed_tool_conf.xml,/mnt/galaxy-app/config/nagios_tool_conf.xml'
    # migrated_tools_config: /mnt/galaxy/var/migrated_tools_conf.xml
    # tool_data_table_config_path: '/mnt/galaxy-app/config/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml'
    # galaxy_data_manager_data_path: /mnt/galaxy/custom-indices
    # builds_file_path: /cvmfs/data.galaxyproject.org/managed/location/builds.txt
    # shed_tool_data_table_config: /mnt/galaxy/var/shed_tool_data_table_conf.xml
    # tool_sheds_config_file: /mnt/galaxy-app/config/tool_sheds_conf.xml
    # datatypes_config_file: /mnt/galaxy-app/config/datatypes_conf.xml

    # shed_tool_data_path: /mnt/galaxy/custom-indices/tool-data/shed_tool_data
    # library_import_dir: /mnt/galaxy/tmp/library_import_dir
    # cluster_files_directory: /mnt/galaxy/tmp/pbs
    # interactive_environment_plugins_directory: config/plugins/interactive_environments
    # visualization_plugins_directory: config/plugins/visualizations

    # citation_cache_data_dir: /mnt/galaxy-app/database/citations/data
    # citation_cache_lock_dir: /mnt/galaxy-app/database/citations/locks
    # template_cache_path: /mnt/galaxy-app/database/template_cache

    # whoosh_index_dir: /mnt/galaxy-app/database/whoosh_cache
    # id_secret: ....  # this is a hexadecimal in production config, if we use this we could encrypt it
    # openid_config_file: /mnt/galaxy-app/config/openid_conf.xml.sample
    # openid_consumer_cache_path: /mnt/galaxy-app/database/openid_consumer_cache
    # object_store_cache_path: /mnt/galaxy-app/database/object_store_cache

    # dynamic_proxy_prefix: galaxy/gie_proxy
    # dynamic_proxy_external_proxy: true
    # dynamic_proxy_debug: true
    # dynamic_proxy_manage: false
    #
    # use_pbkdf2: false
    # smtp_server: localhost
    # set_metadata_externally: true
    # retry_metadata_internally: true

    # ftp_upload_dir: /mnt/ftp/galaxy_prod  # prob not relevant to dev, or if we want this for dev we need to configure something
    # ftp_upload_site: 'ftp.usegalaxy.org.au'
    # enable_openid: true
    # slow_query_log_threshold: .5

    # collect_outputs_from: job_working_directory # surely this is not a real path?  Relative to something?
    # nginx_x_accel_redirect_base: /_x_accel_redirect
    # install_database_connection: 'sqlite:////mnt/galaxy/var/galaxy_install_db.sqlite?isolation_level=IMMEDIATE'
    # rsync_url: 'rsync://scofield.bx.psu.edu/indexes'
    # len_file_path: /mnt/galaxy-app/tool-data/len
    #
    # statsd_host: localhost
    # statsd_port: 8125
    # statsd_prefix: galaxy-aust
    #
    # enable_oidc: true
    # oidc_config_file: config/oidc_config.xml
    # oidc_backends_config_file: config/oidc_backends_config.xml


galaxy_config_template_src_dir: templates/galaxy
galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/static/welcome.html.j2"
    dest: "{{ galaxy_server_dir }}/static/welcome.html"
  - src: "{{ galaxy_config_template_src_dir }}/config/job_conf.xml.j2"
    dest: "{{ galaxy_config_dir}}/job_conf.xml"


#Slurm client
slurm_roles: ['exec']

#Add slurm controllers hostname to hosts.
add_hosts_head: yes
