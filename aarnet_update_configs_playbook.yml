- hosts: aarnet_galaxy_server
  become: true
  vars_files:
      - group_vars/all.yml
      - group_vars/aarnet.yml
      - group_vars/VAULT
      - group_vars/galaxyservers.yml
      - group_vars/aarnet_slurm.yml
      - host_vars/aarnet.usegalaxy.org.au.yml
      - secret_group_vars/stats_server_vault
  handlers:
    - name: galaxy gravity restart
      become: True
      become_user: galaxy
      command: "{{ galaxy_venv_dir }}/bin/galaxyctl graceful"
      environment:
        GRAVITY_STATE_DIR: "{{ galaxy_gravity_state_dir }}"
    - name: galaxy handler restart
      become: True
      become_user: galaxy
      command: "{{ galaxy_venv_dir }}/bin/galaxyctl handler_0 handler_1 handler_2 handler_3 handler_4"
      environment:
        GRAVITY_STATE_DIR: "{{ galaxy_gravity_state_dir }}"
  tasks:
    - name: copy job_conf file
      template:
        src: "{{ galaxy_config_template_src_dir }}/config/aarnet_job_conf.yml.j2"
        dest: "{{ galaxy_config_dir }}/job_conf.yml"
      notify: galaxy handler restart
      # TODO: better linting of job conf, then it is probably entirely acceptable to let the jenkins_bot trigger a graceful restart of handlers
      when: not ansible_user == 'jenkins_bot'  # do not let the automatic process update the job conf
    - name: template object store conf file
      template:
        src: "{{ galaxy_config_template_src_dir }}/config/aarnet_object_store_conf.xml.j2"
        dest: "{{ galaxy_config_dir }}/object_store_conf.xml"
      notify: galaxy gravity restart
      when: not ansible_user == 'jenkins_bot'  # do not let the automatic process object store or restart galaxy
    - name: template toolbox filters
      template:
        src: "{{ galaxy_config_template_src_dir }}/toolbox/filters/ga_filters.py.j2"
        dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/ga_filters.py"
      notify: galaxy gravity restart
      when: not ansible_user == 'jenkins_bot'  # do not let the automatic process restart galaxy
    - name: Copy local tool conf file
      copy:
        src: "{{ galaxy_config_file_src_dir }}/config/{{ item }}"
        dest: "{{ galaxy_config_dir }}/{{ item }}"
      with_items:
        - local_tool_conf.xml
      when: not ansible_user == 'jenkins_bot'
    - name: Install dynamic job rules (static) # dynamic job rules tasks copied from https://github.com/galaxyproject/ansible-galaxy/blob/main/tasks/static_setup.yml
      copy:
        src: "{{ galaxy_dynamic_job_rules_src_dir }}/{{ item }}"
        dest: "{{ galaxy_dynamic_job_rules_dir }}/{{ item }}"
        mode: 0644
      with_items: "{{ galaxy_dynamic_job_rules }}"
      when: not item.endswith(".j2")
    - name: Install dynamic job rules (template)
      template:
        src: "{{ galaxy_dynamic_job_rules_src_dir }}/{{ item }}"
        dest: "{{ galaxy_dynamic_job_rules_dir }}/{{ item | regex_replace(regex) }}"
        mode: 0644
      vars:
        regex: '\.j2$'
      with_items: "{{ galaxy_dynamic_job_rules }}"
      when: item.endswith(".j2")
